#include <stdio.h>
#include <stdio_ext.h>
#include <math.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>
#define Max 100
#define MaxLength 100

typedef struct
{
  char bietHieu[Max];
  int mau;
  int tanCong;
  int nhanhNhen;
  int phongThu;
  int diem;
}VoSi;

typedef VoSi ElementType;

typedef struct
{
  ElementType Elements[MaxLength];//Store the elements
  int Front, Rear;
} Queue;



void MakeNull_Queue(Queue *Q)
{
  Q->Front=-1;
  Q->Rear=-1;
}

int Empty_Queue(Queue Q)
{
  return Q.Front==-1;
}

int Full_Queue(Queue Q)
{
  return (Q.Rear-Q.Front+1)==MaxLength;
}

void EnQueue(ElementType X,Queue *Q)
{
  if(!Full_Queue(*Q))
    {
      if (Empty_Queue(*Q))
	Q->Front=0;
      Q->Rear=Q->Rear+1;
      Q->Elements[Q->Rear]=X;
    }
  else printf("Queue is full\n");
}

ElementType DeQueue(Queue *Q)
{
  ElementType data;
  data=Q->Elements[Q->Front];
  if(!Empty_Queue(*Q))
    {
      Q->Front=Q->Front+1;
      if (Q->Front > Q->Rear)
	MakeNull_Queue(Q);// Queue trở thành rỗng
    }
  else printf("Queue is empty!\n");
  return data;
}

int menuVaLuaChon(int a,int b)
{
  int luaChon,buff;
  char c;
  printf("+-----+--------------------------------------------------+\n");
  printf("|%25s%6s%25s|\n","","MENU","");
  printf("+-----+--------------------------------------------------+\n");
  printf("|%5d|%-50s|\n",1,"Doc du lieu");
  printf("|%5d|%-50s|\n",2,"Tien hanh thi dau");
  printf("|%5d|%-50s|\n",3,"Xep hang vo si");
  printf("|%5d|%-50s|\n",4,"Thoat");
  printf("+-----+--------------------------------------------------+\n");

  do
    {
      __fpurge(stdin);
      printf("Nhap vao lua chon cua ban:");
      buff=scanf("%d%c",&luaChon,&c);
      if(buff!=2&&c!='\n'||luaChon<a||luaChon>b) printf("Ban da nhap sai cu phap\n");
    }while(buff!=2&&c!='\n'||luaChon<a||luaChon>b);
  return luaChon;
}

int SoPhanTu(Queue Q)
{
  int soPhanTu;
  Queue Q2;
  Q2=Q;
  soPhanTu=0;
  while(!Empty_Queue(Q2))
    {
      soPhanTu++;
      DeQueue(&Q2);
    }
  return soPhanTu;
}

void Print(Queue Q)
{
  Queue Q2;
  VoSi voSi;
  int i;
  i=1;
  Q2=Q;
  while(!Empty_Queue(Q2))
    {
      voSi=DeQueue(&Q2);
      printf("%-2d%-10s%-10d%-10d%-10d%-10d\n",i,voSi.bietHieu,voSi.mau,voSi.tanCong,voSi.nhanhNhen,voSi.phongThu);
      i++;
    }
}

int ChienDau(ElementType *voSi1,ElementType *voSi2)
{
  int lanDanh1,lanDanh2;
  lanDanh1=0;lanDanh2=0;
  if(voSi1->nhanhNhen>voSi2->nhanhNhen)
    {
      while(voSi1->mau>0&&voSi2->mau>0)
	{
	  voSi2->mau=voSi2->mau-voSi1->tanCong;
	  voSi1->diem++;
	  printf("%s (%d) tan cong- %s (%d) mat %d mau\n",voSi1->bietHieu,voSi1->mau,voSi2->bietHieu,voSi2->mau,voSi1->tanCong);
	  if(voSi2->mau<=0)
	    {
	      if(lanDanh1==0)
		{
		  printf("KNOCKOUT\n");	  
		  printf("%s thang\n",voSi1->bietHieu);
		  voSi1->diem=voSi1->diem+2;
		  return 11;
		}
	      else
		{
		  printf("%s thang\n",voSi1->bietHieu);
		  return 10;
		}
	    }
	  else
	    lanDanh1=1;
	  voSi1->mau=voSi1->mau-voSi2->tanCong;
	  voSi2->diem++;
	  printf("%s (%d) tan cong- %s (%d) mat %d mau\n",voSi2->bietHieu,voSi2->mau,voSi1->bietHieu,voSi1->mau,voSi2->tanCong);
	  if(voSi1->mau<=0)
	    {
	      if(lanDanh2==0)
		{
		  printf("KNOCKOUT\n");	  
		  printf("%s thang\n",voSi2->bietHieu);
		  voSi2->diem=voSi2->diem+2;
		  return 21;
		}
	      else
		{
		  printf("%s thang\n",voSi2->bietHieu);
		  return 20;
		}
	    }
	  else
	    lanDanh2=1;
	}
    }
  else
    {
      while(voSi1->mau>0&&voSi2->mau>0)
	{
	  voSi1->mau=voSi1->mau-voSi2->tanCong;
	  printf("%s (%d) tan cong- %s (%d) mat %d mau\n",voSi2->bietHieu,voSi2->mau,voSi1->bietHieu,voSi1->mau,voSi2->tanCong);
	  voSi2->diem++;
	  if(voSi1->mau<=0)
	    {
	      if(lanDanh2==0)
		{
		  printf("KNOCKOUT\n");
		  voSi2->diem=voSi2->diem+2;
		  printf("%s thang\n",voSi2->bietHieu);
		  return 21;
		}
	      else
		{
		  printf("%s thang\n",voSi2->bietHieu);
		  return 20;
		}
	    }
	  else
	    lanDanh2=1;	  
	  voSi2->mau=voSi2->mau-voSi1->tanCong;
	  printf("%s (%d) tan cong- %s (%d) mat %d mau\n",voSi1->bietHieu,voSi1->mau,voSi2->bietHieu,voSi2->mau,voSi1->tanCong);
	  voSi1->diem++;
	  if(voSi2->mau<=0)
	    {
	      if(lanDanh1==0)
		{
		  printf("KNOCKOUT\n");	  
		  printf("%s thang\n",voSi1->bietHieu);
		  voSi1->diem=voSi1->diem+2;
		  return 11;
		}
	      else
		{
		  printf("%s thang\n",voSi1->bietHieu);
		  return 10;
		}
	    }
	  else
	    lanDanh1=1;
	}
    }

}

int main()
{

  Queue Q1,Q2;
  Queue Q1Copy,Q2Copy;
  int i,j,k;
  int n;
  int Loi;
  VoSi voSi;
  VoSi A[Max];
  VoSi voSi1,voSi2;
  int ketQua;
  FILE *fptr1,*fptr2;
  int thoat,luaChon;
  char str[Max];
  Loi=0;
  thoat=0;
  
  MakeNull_Queue(&Q1Copy);
  MakeNull_Queue(&Q2Copy);
  MakeNull_Queue(&Q1);
  MakeNull_Queue(&Q2);
  fptr1=fopen("monphai1.txt","r");
  fptr2=fopen("monphai2.txt","r");
  do
    {
      luaChon= menuVaLuaChon(1,4);
      switch(luaChon)
	{
	case 1:
	  //ham1
	  while(fscanf(fptr1,"%s\t%d\t%d\t%d\t%d",voSi.bietHieu,&voSi.mau,&voSi.tanCong,&voSi.nhanhNhen,&voSi.phongThu)!=EOF)
	    {
	      fgets(str,100,fptr1);
	      if(voSi.mau<0||voSi.tanCong<0||voSi.nhanhNhen<0||voSi.phongThu<0)
		{
		  printf("So lieu khong phu hop\nYeu cau nhap lai File\n");
		  Loi=1;
		  break;
		}
	      //printf("%-10s%-10d%-10d%-10d%-10d\n",voSi.bietHieu,voSi.mau,voSi.tanCong,voSi.nhanhNhen,voSi.phongThu);
	      voSi.diem=0;
		EnQueue(voSi,&Q1);
	    }
	  if(Loi==1)
	    break;
	  //  DeQueue(&Q1);
	  while(fscanf(fptr2,"%s\t%d\t%d\t%d\t%d",voSi.bietHieu,&voSi.mau,&voSi.tanCong,&voSi.nhanhNhen,&voSi.phongThu)!=EOF)
	    {
	      fgets(str,100,fptr2);
	      if(voSi.mau<0||voSi.tanCong<0||voSi.nhanhNhen<0||voSi.phongThu<0)
		{
		  printf("So lieu khong phu hop\nYeu cau nhap lai File\n");
		  Loi=1;
		  break;
		}
	      //printf("%-10s%-10d%-10d%-10d%-10d\n",voSi.bietHieu,voSi.mau,voSi.tanCong,voSi.nhanhNhen,voSi.phongThu);
	      voSi.diem=0;
		EnQueue(voSi,&Q2);
	    }
	  if(Loi==1)
	    break;
	  // DeQueue(&Q2);
	  if(SoPhanTu(Q1)!=SoPhanTu(Q2))
	    {
	      printf("Luc luong khong can bang\nYeu cau nhap lai\n");
	      break;
	    }
	  printf("TEAM 1:\n");
	  printf("%-2s%-10s%-10s%-10s%-10s%-10s\n","S","Ten","Mau","Tan cong","NN","PT");
	  Print(Q1);
	  printf("\n");
	  printf("TEAM2:\n");
	  printf("%-2s%-10s%-10s%-10s%-10s%-10s\n","S","Ten","Mau","Tan cong","NN","PT");
	  Print(Q2);
	  printf("\n");
	  /*
	   while(!EmptyQueue(Q2))
    {
      voSi=DeQueue(&Q2);
      printf("%-2d%-10s%-10d%-10d%-10d%-10d\n",i,voSi.bietHieu,voSi.mau,voSi.tanCong,voSi.nhanhNhen,voSi.phongThu);
      i++;
    }
	  */
	   break;
	case 2:
	  //ham2
	  n=1;
	  voSi1=DeQueue(&Q1);
	  voSi2=DeQueue(&Q2);
	  // printf("TRAN %d:\n:",n);
	  // ketQua=ChienDau(&voSi1,&voSi2);
	  while(1)
	    {
	      
	      printf("\nTRAN %d:\n:",n);
	      ketQua=ChienDau(&voSi1,&voSi2);
	      n++;
	      if(!Empty_Queue(Q1)&&!Empty_Queue(Q2))
		{
	      if(ketQua==11||ketQua==10)
		{	  
		  EnQueue(voSi2,&Q2Copy);
		  voSi2=DeQueue(&Q2);
		}
	      else
		{
		  EnQueue(voSi1,&Q1Copy);
		  voSi1=DeQueue(&Q1);
		}
		}
		
	      else
		{
		  if(Empty_Queue(Q1)&&!Empty_Queue(Q2))
		{
		  if(ketQua==11||ketQua==10)
		    {
		      EnQueue(voSi2,&Q2Copy);
		      voSi2=DeQueue(&Q2);
		    }
		  else
		    {
		      EnQueue(voSi1,&Q1Copy);
		      printf("MON PHAI 1 THUA\n");
		      // printf("%s\n",voSi2.bietHieu);
		      while(!Empty_Queue(Q2))
			EnQueue(DeQueue(&Q2),&Q2Copy);
		      break;
		    }
		}
	      else
		if(Empty_Queue(Q2)&&!Empty_Queue(Q1))
		{
		  if(ketQua==21||ketQua==20)
		    {
		      EnQueue(voSi1,&Q1Copy);
		      voSi1=DeQueue(&Q1);
		    }
		  else
		    {
		      EnQueue(voSi2,&Q2Copy);
		      printf("MON PHAI 2 THUA\n");
		      while(!Empty_Queue(Q1))
			EnQueue(DeQueue(&Q1),&Q1Copy);
		      break;
		    }
		}
		else
		  if(Empty_Queue(Q1)&&Empty_Queue(Q2))
		    {
		      if(ketQua==11||ketQua==10)
			{
			  printf("MON PHAI 2 THUA\n");
			  EnQueue(voSi1,&Q1Copy);
			  EnQueue(voSi2,&Q2Copy);
			  break;
			}
			else
			  {
			  printf("MON PHAI 1 THUA\n");
			  //printf("%s\n",voSi2.bietHieu);
			  EnQueue(voSi1,&Q1Copy);
			  EnQueue(voSi2,&Q2Copy);
			  break;
			  }
		    }
		}
	    }
	  break;
	case 3:
	  //ham3
	  i=0;
	  // Print(Q1Copy);
	  // printf("\n");
	  //  Print(Q2Copy);
	  // printf("\n");
	  printf("BXH vo si theo diem:\n");
	  while(!Empty_Queue(Q1Copy))
	    {
	      A[i]=DeQueue(&Q1Copy);
	      i++;
	    }
	  while(!Empty_Queue(Q2Copy))
	    {
	      A[i]=DeQueue(&Q2Copy);
	      i++;
	    }
	  n=i;
	  for(i=0;i<n;i++)
	    for(j=i;j<n;j++)
	      if(A[i].diem<A[j].diem)
		{
		  voSi=A[i];
		  A[i]=A[j];
		  A[j]=voSi;
		}
	  for(i=0;i<n;i++)
	    printf("%-2d%-10s%-10d\n",i+1,A[i].bietHieu,A[i].diem);
	     
	  break;
	case 4:
	  thoat=1;
	  break;
	}	
    }while(thoat!=1);
}
 
